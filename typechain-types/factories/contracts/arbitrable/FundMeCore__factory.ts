/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FundMeCore,
  FundMeCoreInterface,
} from "../../../contracts/arbitrable/FundMeCore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_arbitrator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_arbitratorExtraData",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "_allowedNumberOfMilestones",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_createTransactionCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "FundMe__ERC20TransferUnsuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "FundMe__FundMeContractAddressInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "FundMe__MilestoneAmountUnlockablePercentageNot1",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "FundMe__NonCompliantERC20",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requiredReceiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FundMe__OnlyTransactionReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountRequired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountSent",
        type: "uint256",
      },
    ],
    name: "FundMe__PaymentTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "FundMe__TooManyMilestonesInitilized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "FundMe__TransactionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "FundMe__ZeroAddressInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IArbitrator",
        name: "_arbitrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_metaEvidenceID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_evidenceGroupID",
        type: "uint256",
      },
    ],
    name: "Dispute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IArbitrator",
        name: "_arbitrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_evidenceGroupID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_evidence",
        type: "string",
      },
    ],
    name: "Evidence",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_transactionID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountFunded",
        type: "uint256",
      },
    ],
    name: "FundTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_metaEvidenceID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_evidence",
        type: "string",
      },
    ],
    name: "MetaEvidence",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IArbitrator",
        name: "_arbitrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_ruling",
        type: "uint256",
      },
    ],
    name: "Ruling",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_transactionID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_crowdFundToken",
        type: "address",
      },
    ],
    name: "TransactionCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "allowedNumberOfMilestones",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "appeal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrator",
    outputs: [
      {
        internalType: "contract IArbitrator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_allowedNumberOfMilestones",
        type: "uint16",
      },
    ],
    name: "changeAllowedNumberOfMilestones",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_createTransactionCost",
        type: "uint256",
      },
    ],
    name: "changeCreateTransactionCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newTransactionReceiver",
        type: "address",
      },
    ],
    name: "changeTransactionReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "claimMilestone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_milestoneAmountUnlockable",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_crowdfundToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metaEvidence",
        type: "string",
      },
    ],
    name: "createTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputeIdToTransactionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_transactionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountFunded",
        type: "uint256",
      },
    ],
    name: "fundTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalFunded",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amountUnlockable",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountClaimed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "disputeFeeReceiver",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "disputeFeeFunders",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "disputeId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "disputePayerForFunders",
                type: "address",
              },
              {
                internalType: "enum FundMeCore.Status",
                name: "status",
                type: "uint8",
              },
            ],
            internalType: "struct FundMeCore.Milestone[]",
            name: "milestones",
            type: "tuple[]",
          },
          {
            internalType: "uint256[]",
            name: "remainingMilestonesAmountUnlockable",
            type: "uint256[]",
          },
          {
            internalType: "contract IERC20",
            name: "crowdfundToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "voteToken",
            type: "address",
          },
        ],
        internalType: "struct FundMeCore.Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "milestoneId",
        type: "uint16",
      },
    ],
    name: "getTransactionMilestone",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amountUnlockable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeFeeReceiver",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeFeeFunders",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "disputeId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "disputePayerForFunders",
            type: "address",
          },
          {
            internalType: "enum FundMeCore.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct FundMeCore.Milestone",
        name: "_milestone",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "makeVoteToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "payDisputeFeeByHolders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "payDisputeFeeByTeam",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ruling",
        type: "uint256",
      },
    ],
    name: "rule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "timeoutByHolders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "timeoutByTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "transactionAddressAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneID",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002bb338038062002bb383398181016040528101906200003791906200041d565b620000576200004b620000d560201b60201c565b620000dd60201b60201c565b6001808190555083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060068190555081600260006101000a81548161ffff021916908361ffff1602179055508060038190555050505050620004ae565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e282620001b5565b9050919050565b620001f481620001d5565b81146200020057600080fd5b50565b6000815190506200021481620001e9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200026f8262000224565b810181811067ffffffffffffffff8211171562000291576200029062000235565b5b80604052505050565b6000620002a6620001a1565b9050620002b4828262000264565b919050565b600067ffffffffffffffff821115620002d757620002d662000235565b5b620002e28262000224565b9050602081019050919050565b60005b838110156200030f578082015181840152602081019050620002f2565b838111156200031f576000848401525b50505050565b60006200033c6200033684620002b9565b6200029a565b9050828152602081018484840111156200035b576200035a6200021f565b5b62000368848285620002ef565b509392505050565b600082601f8301126200038857620003876200021a565b5b81516200039a84826020860162000325565b91505092915050565b600061ffff82169050919050565b620003bc81620003a3565b8114620003c857600080fd5b50565b600081519050620003dc81620003b1565b92915050565b6000819050919050565b620003f781620003e2565b81146200040357600080fd5b50565b6000815190506200041781620003ec565b92915050565b600080600080608085870312156200043a5762000439620001ab565b5b60006200044a8782880162000203565b945050602085015167ffffffffffffffff8111156200046e576200046d620001b0565b5b6200047c8782880162000370565b93505060406200048f87828801620003cb565b9250506060620004a28782880162000406565b91505092959194509250565b6126f580620004be6000396000f3fe6080604052600436106101805760003560e01c80637e69b7b0116100d1578063cf18ce391161008a578063e41eb7d411610064578063e41eb7d414610540578063f2fde38b1461055c578063f55ea75f14610585578063f881b4c9146105ae57610180565b8063cf18ce39146104b1578063d27ebc71146104ee578063dc58c43c1461051757610180565b80637e69b7b0146103bd5780638da5cb5b146103d95780639fb80e9414610404578063a263600d14610434578063a5fcd0f61461045f578063c266aef71461048857610180565b806333ea3dc81161013e578063592c6dba11610118578063592c6dba146103225780636cc6cde11461035f5780636f75449f1461038a578063715018a6146103a657610180565b806333ea3dc8146102935780633c804a90146102d05780634d36bbe8146102f957610180565b80623879361461018557806301ffc9a7146101ae5780630c340a24146101eb5780630c536933146102165780632e1a7d4d14610241578063311a6c561461026a575b600080fd5b34801561019157600080fd5b506101ac60048036038101906101a79190611823565b6105eb565b005b3480156101ba57600080fd5b506101d560048036038101906101d091906118a8565b610613565b6040516101e291906118f0565b60405180910390f35b3480156101f757600080fd5b5061020061067d565b60405161020d919061194c565b60405180910390f35b34801561022257600080fd5b5061022b6106a3565b6040516102389190611980565b60405180910390f35b34801561024d57600080fd5b50610268600480360381019061026391906119c7565b6106a9565b005b34801561027657600080fd5b50610291600480360381019061028c91906119f4565b6106ac565b005b34801561029f57600080fd5b506102ba60048036038101906102b591906119c7565b6106b0565b6040516102c79190611da4565b60405180910390f35b3480156102dc57600080fd5b506102f760048036038101906102f291906119c7565b610963565b005b34801561030557600080fd5b50610320600480360381019061031b9190611df2565b610966565b005b34801561032e57600080fd5b5061034960048036038101906103449190611df2565b610b6a565b6040516103569190611980565b60405180910390f35b34801561036b57600080fd5b50610374610b8f565b6040516103819190611e53565b60405180910390f35b6103a4600480360381019061039f91906119c7565b610bb5565b005b3480156103b257600080fd5b506103bb610bb8565b005b6103d760048036038101906103d291906119c7565b610bcc565b005b3480156103e557600080fd5b506103ee610bcf565b6040516103fb919061194c565b60405180910390f35b61041e6004803603810190610419919061207c565b610bf8565b60405161042b9190611980565b60405180910390f35b34801561044057600080fd5b50610449611098565b6040516104569190612116565b60405180910390f35b34801561046b57600080fd5b50610486600480360381019061048191906119c7565b6110ac565b005b34801561049457600080fd5b506104af60048036038101906104aa91906119f4565b6110af565b005b3480156104bd57600080fd5b506104d860048036038101906104d39190612131565b6110b3565b6040516104e591906121ff565b60405180910390f35b3480156104fa57600080fd5b50610515600480360381019061051091906119c7565b6111cb565b005b34801561052357600080fd5b5061053e600480360381019061053991906119f4565b6111dd565b005b61055a600480360381019061055591906119c7565b6114ab565b005b34801561056857600080fd5b50610583600480360381019061057e919061221a565b6114ae565b005b34801561059157600080fd5b506105ac60048036038101906105a791906119c7565b611531565b005b3480156105ba57600080fd5b506105d560048036038101906105d091906119c7565b611534565b6040516105e29190611980565b60405180910390f35b6105f361154c565b80600260006101000a81548161ffff021916908361ffff16021790555050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b50565b5050565b6106b86116f8565b600760008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561085057838290600052602060002090600602016040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff16600481111561082b5761082a611a7e565b5b600481111561083d5761083c611a7e565b5b815250508152602001906001019061075b565b505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156108a757602002820191906000526020600020905b815481526020019060010190808311610893575b505050505081526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b50565b813373ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a45576007600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040517fc4ad1ca6000000000000000000000000000000000000000000000000000000008152600401610a3c929190612247565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aab576040517f26ba2d7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b10576040517f254c03a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816007600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6008602052816000526040600020602052806000526040600020600091509150505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b610bc061154c565b610bca60006115ca565b565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600354341015610c4557600354346040517f4af82b2d000000000000000000000000000000000000000000000000000000008152600401610c3c929190612270565b60405180910390fd5b600260009054906101000a900461ffff1661ffff1684511115610c94576040517f6f9c7e4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b670de0b6b3a7640000610ca68561168e565b14610cdd576040517f65c60cf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d4557506040513d601f19601f82011682018060405250810190610d4291906122ae565b60015b610d8657826040517fbb1944c3000000000000000000000000000000000000000000000000000000008152600401610d7d919061194c565b60405180910390fd5b5060065490506000600760008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b8551811015610fe4576000826002019050806040518060e00160405280898581518110610e9f57610e9e6122db565b5b6020026020010151815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006004811115610ef957610ef8611a7e565b5b8152509080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff02191690836004811115610fc957610fc8611a7e565b5b02179055505050508080610fdc90612339565b915050610e6f565b5060066000815480929190610ff890612339565b9190505550817f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d8460405161102d9190612409565b60405180910390a28373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16837fc7d8edc3ff9466edccc362811619db5cbfe02b3e0fbfc4aa99349d7f107f780260405160405180910390a4509392505050565b600260009054906101000a900461ffff1681565b50565b5050565b6110bb611770565b600760008481526020019081526020016000206002018261ffff16815481106110e7576110e66122db565b5b90600052602060002090600602016040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff1660048111156111ad576111ac611a7e565b5b60048111156111bf576111be611a7e565b5b81525050905092915050565b6111d361154c565b8060038190555050565b600260015403611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121990612477565b60405180910390fd5b60026001819055506000600760008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036112d657826040517f730b3cec0000000000000000000000000000000000000000000000000000000081526004016112cd9190611980565b60405180910390fd5b60008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161133993929190612497565b6020604051808303816000875af1158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c91906124fa565b9050806113e4578160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f4dd02dfe0000000000000000000000000000000000000000000000000000000081526004016113db919061194c565b60405180910390fd5b828260010160008282546113f89190612527565b92505081905550826008600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461145f9190612527565b92505081905550837fe78d03aebae8cd158ece15aff8f2c11cc45500d843a2d993790efc468341fe2d846040516114969190611980565b60405180910390a25050600180819055505050565b50565b6114b661154c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151c906125ef565b60405180910390fd5b61152e816115ca565b50565b50565b60096020528060005260406000206000915090505481565b6115546116f0565b73ffffffffffffffffffffffffffffffffffffffff16611572610bcf565b73ffffffffffffffffffffffffffffffffffffffff16146115c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bf9061265b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000805b82518167ffffffffffffffff1610156116ea57828167ffffffffffffffff16815181106116c2576116c16122db565b5b6020026020010151826116d59190612527565b915080806116e29061268f565b915050611692565b50919050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060e001604052806000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060048111156117cf576117ce611a7e565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b611800816117e9565b811461180b57600080fd5b50565b60008135905061181d816117f7565b92915050565b600060208284031215611839576118386117df565b5b60006118478482850161180e565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61188581611850565b811461189057600080fd5b50565b6000813590506118a28161187c565b92915050565b6000602082840312156118be576118bd6117df565b5b60006118cc84828501611893565b91505092915050565b60008115159050919050565b6118ea816118d5565b82525050565b600060208201905061190560008301846118e1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119368261190b565b9050919050565b6119468161192b565b82525050565b6000602082019050611961600083018461193d565b92915050565b6000819050919050565b61197a81611967565b82525050565b60006020820190506119956000830184611971565b92915050565b6119a481611967565b81146119af57600080fd5b50565b6000813590506119c18161199b565b92915050565b6000602082840312156119dd576119dc6117df565b5b60006119eb848285016119b2565b91505092915050565b60008060408385031215611a0b57611a0a6117df565b5b6000611a19858286016119b2565b9250506020611a2a858286016119b2565b9150509250929050565b611a3d8161192b565b82525050565b611a4c81611967565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611abe57611abd611a7e565b5b50565b6000819050611acf82611aad565b919050565b6000611adf82611ac1565b9050919050565b611aef81611ad4565b82525050565b60e082016000820151611b0b6000850182611a43565b506020820151611b1e6020850182611a43565b506040820151611b316040850182611a43565b506060820151611b446060850182611a43565b506080820151611b576080850182611a43565b5060a0820151611b6a60a0850182611a34565b5060c0820151611b7d60c0850182611ae6565b50505050565b6000611b8f8383611af5565b60e08301905092915050565b6000602082019050919050565b6000611bb382611a52565b611bbd8185611a5d565b9350611bc883611a6e565b8060005b83811015611bf9578151611be08882611b83565b9750611beb83611b9b565b925050600181019050611bcc565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611c3e8383611a43565b60208301905092915050565b6000602082019050919050565b6000611c6282611c06565b611c6c8185611c11565b9350611c7783611c22565b8060005b83811015611ca8578151611c8f8882611c32565b9750611c9a83611c4a565b925050600181019050611c7b565b5085935050505092915050565b6000819050919050565b6000611cda611cd5611cd08461190b565b611cb5565b61190b565b9050919050565b6000611cec82611cbf565b9050919050565b6000611cfe82611ce1565b9050919050565b611d0e81611cf3565b82525050565b600060c083016000830151611d2c6000860182611a34565b506020830151611d3f6020860182611a43565b5060408301518482036040860152611d578282611ba8565b91505060608301518482036060860152611d718282611c57565b9150506080830151611d866080860182611d05565b5060a0830151611d9960a0860182611d05565b508091505092915050565b60006020820190508181036000830152611dbe8184611d14565b905092915050565b611dcf8161192b565b8114611dda57600080fd5b50565b600081359050611dec81611dc6565b92915050565b60008060408385031215611e0957611e086117df565b5b6000611e17858286016119b2565b9250506020611e2885828601611ddd565b9150509250929050565b6000611e3d82611ce1565b9050919050565b611e4d81611e32565b82525050565b6000602082019050611e686000830184611e44565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ebc82611e73565b810181811067ffffffffffffffff82111715611edb57611eda611e84565b5b80604052505050565b6000611eee6117d5565b9050611efa8282611eb3565b919050565b600067ffffffffffffffff821115611f1a57611f19611e84565b5b602082029050602081019050919050565b600080fd5b6000611f43611f3e84611eff565b611ee4565b90508083825260208201905060208402830185811115611f6657611f65611f2b565b5b835b81811015611f8f5780611f7b88826119b2565b845260208401935050602081019050611f68565b5050509392505050565b600082601f830112611fae57611fad611e6e565b5b8135611fbe848260208601611f30565b91505092915050565b600080fd5b600067ffffffffffffffff821115611fe757611fe6611e84565b5b611ff082611e73565b9050602081019050919050565b82818337600083830152505050565b600061201f61201a84611fcc565b611ee4565b90508281526020810184848401111561203b5761203a611fc7565b5b612046848285611ffd565b509392505050565b600082601f83011261206357612062611e6e565b5b813561207384826020860161200c565b91505092915050565b600080600060608486031215612095576120946117df565b5b600084013567ffffffffffffffff8111156120b3576120b26117e4565b5b6120bf86828701611f99565b93505060206120d086828701611ddd565b925050604084013567ffffffffffffffff8111156120f1576120f06117e4565b5b6120fd8682870161204e565b9150509250925092565b612110816117e9565b82525050565b600060208201905061212b6000830184612107565b92915050565b60008060408385031215612148576121476117df565b5b6000612156858286016119b2565b92505060206121678582860161180e565b9150509250929050565b60e0820160008201516121876000850182611a43565b50602082015161219a6020850182611a43565b5060408201516121ad6040850182611a43565b5060608201516121c06060850182611a43565b5060808201516121d36080850182611a43565b5060a08201516121e660a0850182611a34565b5060c08201516121f960c0850182611ae6565b50505050565b600060e0820190506122146000830184612171565b92915050565b6000602082840312156122305761222f6117df565b5b600061223e84828501611ddd565b91505092915050565b600060408201905061225c600083018561193d565b612269602083018461193d565b9392505050565b60006040820190506122856000830185611971565b6122926020830184611971565b9392505050565b6000815190506122a88161199b565b92915050565b6000602082840312156122c4576122c36117df565b5b60006122d284828501612299565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061234482611967565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123765761237561230a565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123bb5780820151818401526020810190506123a0565b838111156123ca576000848401525b50505050565b60006123db82612381565b6123e5818561238c565b93506123f581856020860161239d565b6123fe81611e73565b840191505092915050565b6000602082019050818103600083015261242381846123d0565b905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612461601f8361238c565b915061246c8261242b565b602082019050919050565b6000602082019050818103600083015261249081612454565b9050919050565b60006060820190506124ac600083018661193d565b6124b9602083018561193d565b6124c66040830184611971565b949350505050565b6124d7816118d5565b81146124e257600080fd5b50565b6000815190506124f4816124ce565b92915050565b6000602082840312156125105761250f6117df565b5b600061251e848285016124e5565b91505092915050565b600061253282611967565b915061253d83611967565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125725761257161230a565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006125d960268361238c565b91506125e48261257d565b604082019050919050565b60006020820190508181036000830152612608816125cc565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061264560208361238c565b91506126508261260f565b602082019050919050565b6000602082019050818103600083015261267481612638565b9050919050565b600067ffffffffffffffff82169050919050565b600061269a8261267b565b915067ffffffffffffffff82036126b4576126b361230a565b5b60018201905091905056fea26469706673582212201cd3fd0b8ff16b5612f1e1960372014f66d85f491c604d3f9a081004fbd52d8b64736f6c634300080d0033";

type FundMeCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMeCore__factory extends ContractFactory {
  constructor(...args: FundMeCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _arbitrator: PromiseOrValue<string>,
    _arbitratorExtraData: PromiseOrValue<BytesLike>,
    _allowedNumberOfMilestones: PromiseOrValue<BigNumberish>,
    _createTransactionCost: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMeCore> {
    return super.deploy(
      _arbitrator,
      _arbitratorExtraData,
      _allowedNumberOfMilestones,
      _createTransactionCost,
      overrides || {}
    ) as Promise<FundMeCore>;
  }
  override getDeployTransaction(
    _arbitrator: PromiseOrValue<string>,
    _arbitratorExtraData: PromiseOrValue<BytesLike>,
    _allowedNumberOfMilestones: PromiseOrValue<BigNumberish>,
    _createTransactionCost: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _arbitrator,
      _arbitratorExtraData,
      _allowedNumberOfMilestones,
      _createTransactionCost,
      overrides || {}
    );
  }
  override attach(address: string): FundMeCore {
    return super.attach(address) as FundMeCore;
  }
  override connect(signer: Signer): FundMeCore__factory {
    return super.connect(signer) as FundMeCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeCoreInterface {
    return new utils.Interface(_abi) as FundMeCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FundMeCore {
    return new Contract(address, _abi, signerOrProvider) as FundMeCore;
  }
}
