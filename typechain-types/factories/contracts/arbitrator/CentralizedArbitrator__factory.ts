/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CentralizedArbitrator,
  CentralizedArbitratorInterface,
} from "../../../contracts/arbitrator/CentralizedArbitrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_arbitrationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_appealDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_appealFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IArbitrable",
        name: "_arbitrable",
        type: "address",
      },
    ],
    name: "AppealDecision",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IArbitrable",
        name: "_arbitrable",
        type: "address",
      },
    ],
    name: "AppealPossible",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_round",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
    ],
    name: "ChoiceFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Contribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IArbitrable",
        name: "_arbitrable",
        type: "address",
      },
    ],
    name: "DisputeCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "LOSER_APPEAL_PERIOD_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOSER_STAKE_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MULTIPLIER_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WINNER_STAKE_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appealDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appealFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
    ],
    name: "appealPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "arbitrationCost",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_choices",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes",
      },
    ],
    name: "createDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "disputeID",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputeIDtoRoundArray",
    outputs: [
      {
        internalType: "uint256",
        name: "feeRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputes",
    outputs: [
      {
        internalType: "contract IArbitrable",
        name: "arbitrated",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "arbitratorExtraData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "choices",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "appealPeriodStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "arbitrationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ruling",
        type: "uint256",
      },
      {
        internalType: "enum CentralizedArbitrator.DisputeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
    ],
    name: "fundAppeal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
    ],
    name: "fundingStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "funded",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ruling",
        type: "uint256",
      },
    ],
    name: "giveRuling",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_appealDuration",
        type: "uint256",
      },
    ],
    name: "setAppealDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_appealFee",
        type: "uint256",
      },
    ],
    name: "setAppealFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_arbitrationFee",
        type: "uint256",
      },
    ],
    name: "setArbitrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeID",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_round",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
    ],
    name: "withdrawFeesAndRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005157600080fd5b506040516200290f3803806200290f8339818101604052810190620000779190620000d5565b82600281905550816001819055508060038190555050505062000131565b600080fd5b6000819050919050565b620000af816200009a565b8114620000bb57600080fd5b50565b600081519050620000cf81620000a4565b92915050565b600080600060608486031215620000f157620000f062000095565b5b60006200010186828701620000be565b93505060206200011486828701620000be565b92505060406200012786828701620000be565b9150509250925092565b6127ce80620001416000396000f3fe6080604052600436106101145760003560e01c80638da5cb5b116100a0578063c13517e111610064578063c13517e1146103c0578063c97c4d5c146103f0578063d661dd3114610419578063e349ad3014610444578063f7434ea91461046f57610114565b80638da5cb5b146102d857806394d0df2614610303578063afe15cfb1461032c578063b34bfaa81461036a578063be4676041461039557610114565b8063564a565d116100e7578063564a565d146101ed5780635ea7b4fc1461023057806379110a47146102595780637984e6b514610282578063867bc61b146102ad57610114565b806328bd71c514610119578063362c3479146101575780633ef40ba7146101945780634b2f0ea0146101d1575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611c03565b6104ac565b60405161014e929190611c52565b60405180910390f35b34801561016357600080fd5b5061017e60048036038101906101799190611cd9565b610669565b60405161018b9190611d40565b60405180910390f35b3480156101a057600080fd5b506101bb60048036038101906101b69190611c03565b610a7f565b6040516101c89190611d40565b60405180910390f35b6101eb60048036038101906101e69190611c03565b610aba565b005b3480156101f957600080fd5b50610214600480360381019061020f9190611d5b565b6110d7565b6040516102279796959493929190611ef7565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190611d5b565b6111de565b005b34801561026557600080fd5b50610280600480360381019061027b9190611d5b565b611276565b005b34801561028e57600080fd5b5061029761130e565b6040516102a49190611d40565b60405180910390f35b3480156102b957600080fd5b506102c2611314565b6040516102cf9190611d40565b60405180910390f35b3480156102e457600080fd5b506102ed61131a565b6040516102fa9190611f8e565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190611d5b565b61133e565b005b34801561033857600080fd5b50610353600480360381019061034e9190611d5b565b6113d6565b604051610361929190611c52565b60405180910390f35b34801561037657600080fd5b5061037f61145a565b60405161038c9190611d40565b60405180910390f35b3480156103a157600080fd5b506103aa611460565b6040516103b79190611d40565b60405180910390f35b6103da60048036038101906103d5919061200e565b611466565b6040516103e79190611d40565b60405180910390f35b3480156103fc57600080fd5b5061041760048036038101906104129190611c03565b6116c6565b005b34801561042557600080fd5b5061042e611b07565b60405161043b9190611d40565b60405180910390f35b34801561045057600080fd5b50610459611b0d565b6040516104669190611d40565b60405180910390f35b34801561047b57600080fd5b506104966004803603810190610491919061206e565b611b13565b6040516104a39190611d40565b60405180910390f35b6000806000600485815481106104c5576104c46120bb565b5b90600052602060002090600702019050806002015484111561051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390612147565b60405180910390fd5b600160028111156105305761052f611e80565b5b8160060160009054906101000a900460ff16600281111561055457610553611e80565b5b14610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b906121b3565b60405180910390fd5b838160050154036105ce57612710806003546105b09190612202565b6105ba919061228b565b6003546105c791906122bc565b91506105fb565b612710614e206003546105e19190612202565b6105eb919061228b565b6003546105f891906122bc565b91505b6000600560008781526020019081526020016000209050600081600183805490506106269190612312565b81548110610637576106366120bb565b5b906000526020600020906005020190508060000160008781526020019081526020016000205494505050509250929050565b600080600486815481106106805761067f6120bb565b5b906000526020600020906007020190506002808111156106a3576106a2611e80565b5b8160060160009054906101000a900460ff1660028111156106c7576106c6611e80565b5b14610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe90612392565b60405180910390fd5b600060056000888152602001908152602001600020858154811061072e5761072d6120bb565b5b9060005260206000209060050201905080600101600085815260200190815260200160002060009054906101000a900460ff166107bf578060020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054925061098c565b8160050154840361087857600081600001600086815260200190815260200160002054116107ee576000610871565b8060000160008581526020019081526020016000205481600301548260020160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020546108669190612202565b610870919061228b565b5b925061098b565b8060010160008360050154815260200190815260200160002060009054906101000a900460ff1661098a57806000016000826004016001815481106108c0576108bf6120bb565b5b9060005260206000200154815260200190815260200160002054816000016000836004016000815481106108f7576108f66120bb565b5b906000526020600020015481526020019081526020016000205461091b91906122bc565b81600301548260020160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000205461097d9190612202565b610987919061228b565b92505b5b5b60008160020160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000208190555060008314610a75578573ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050508573ffffffffffffffffffffffffffffffffffffffff1685887f54b3cab3cb5c4aca3209db1151caff092e878011202e43a36782d4ebe0b963ae8787604051610a6c929190611c52565b60405180910390a45b5050949350505050565b60056020528160005260406000208181548110610a9b57600080fd5b9060005260206000209060050201600091509150508060030154905081565b600060048381548110610ad057610acf6120bb565b5b9060005260206000209060070201905060016002811115610af457610af3611e80565b5b8160060160009054906101000a900460ff166002811115610b1857610b17611e80565b5b14610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f906121b3565b60405180910390fd5b8060020154821115610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690612147565b60405180910390fd5b600080610bab856113d6565b91509150814210158015610bbe57508042105b610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906123fe565b60405180910390fd5b600084846005015403610c14576127109050610c8c565b6127106113888484610c269190612312565b610c309190612202565b610c3a919061228b565b8342610c469190612312565b10610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d9061246a565b60405180910390fd5b614e2090505b6000600560008881526020019081526020016000209050600060018280549050610cb69190612312565b90506000828281548110610ccd57610ccc6120bb565b5b9060005260206000209060050201905080600101600089815260200190815260200160002060009054906101000a900460ff1615610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d37906124d6565b60405180910390fd5b600061271085600354610d539190612202565b610d5d919061228b565b600354610d6a91906122bc565b905060008260000160008b815260200190815260200160002054821115610e2f57348360000160008c81526020019081526020016000205483610dad9190612312565b11610dd8578260000160008b81526020019081526020016000205482610dd39190612312565b610dda565b345b90503373ffffffffffffffffffffffffffffffffffffffff16848c7fcae597f39a3ad75c2e10d46b031f023c5c2babcd58ca0491b122acda3968d4c08d85604051610e26929190611c52565b60405180910390a45b808360020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c81526020019081526020016000206000828254610e9191906122bc565b92505081905550808360000160008c81526020019081526020016000206000828254610ebd91906122bc565b92505081905550818360000160008c81526020019081526020016000205410610f99578260000160008b815260200190815260200160002054836003016000828254610f0991906122bc565b92505081905550826004018a908060018154018082558091505060019003906000526020600020016000909190919091505560018360010160008c815260200190815260200160002060006101000a81548160ff02191690831515021790555089848c7fed764996238e4c1c873ae3af7ae2f00f1f6f4f10b9ac7d4bbea4a764c5dea00960405160405180910390a45b6001836004018054905011156110805784600181600181540180825580915050039060005260206000209050506003548360030154610fd89190612312565b836003018190555060008960060160006101000a81548160ff0219169083600281111561100857611007611e80565b5b0217905550600089600301819055508860000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168b7f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d60405160405180910390a35b803411156110ca573373ffffffffffffffffffffffffffffffffffffffff166108fc82346110ae9190612312565b9081150290604051600060405180830381858888f19350505050505b5050505050505050505050565b600481815481106110e757600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461113090612525565b80601f016020809104026020016040519081016040528092919081815260200182805461115c90612525565b80156111a95780601f1061117e576101008083540402835291602001916111a9565b820191906000526020600020905b81548152906001019060200180831161118c57829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611263906125a2565b60405180910390fd5b8060028190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb906125a2565b60405180910390fd5b8060038190555050565b60035481565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c3906125a2565b60405180910390fd5b8060018190555050565b6000806000600484815481106113ef576113ee6120bb565b5b906000526020600020906007020190506001600281111561141357611412611e80565b5b8160060160009054906101000a900460ff16600281111561143757611436611e80565b5b0361145457806003015492506001548361145191906122bc565b91505b50915091565b614e2081565b61138881565b6000806114738484611b13565b9050803410156114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af90612634565b60405180910390fd5b600480549050915060046040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200187815260200160008152602001348152602001600081526020016000600281111561156157611560611e80565b5b815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906115f0929190611b20565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600281111561164457611643611e80565b5b0217905550505060056000838152602001908152602001600020600181600181540180825580915050039060005260206000209050503373ffffffffffffffffffffffffffffffffffffffff16827f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99560405160405180910390a3509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174b906125a2565b60405180910390fd5b60006004838154811061176a576117696120bb565b5b9060005260206000209060070201905080600201548211156117c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b8906126a0565b60405180910390fd5b6002808111156117d4576117d3611e80565b5b8160060160009054906101000a900460ff1660028111156117f8576117f7611e80565b5b03611838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182f9061270c565b60405180910390fd5b6000600281111561184c5761184b611e80565b5b8160060160009054906101000a900460ff1660028111156118705761186f611e80565b5b036119215781816005018190555060018160060160006101000a81548160ff021916908360028111156118a6576118a5611e80565b5b02179055504281600301819055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837fa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f60405160405180910390a3611b02565b600154816003015461193391906122bc565b4211611974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196b90612778565b60405180910390fd5b81816005018190555060028160060160006101000a81548160ff021916908360028111156119a5576119a4611e80565b5b02179055506000600560008581526020019081526020016000209050600081600183805490506119d59190612312565b815481106119e6576119e56120bb565b5b906000526020600020906005020190506001816004018054905003611a305780600401600081548110611a1c57611a1b6120bb565b5b906000526020600020015483600501819055505b3373ffffffffffffffffffffffffffffffffffffffff166108fc84600401549081150290604051600060405180830381858888f19350505050508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663311a6c568685600501546040518363ffffffff1660e01b8152600401611acd929190611c52565b600060405180830381600087803b158015611ae757600080fd5b505af1158015611afb573d6000803e3d6000fd5b5050505050505b505050565b61271081565b61271081565b6000600254905092915050565b828054611b2c90612525565b90600052602060002090601f016020900481019282611b4e5760008555611b95565b82601f10611b6757805160ff1916838001178555611b95565b82800160010185558215611b95579182015b82811115611b94578251825591602001919060010190611b79565b5b509050611ba29190611ba6565b5090565b5b80821115611bbf576000816000905550600101611ba7565b5090565b600080fd5b600080fd5b6000819050919050565b611be081611bcd565b8114611beb57600080fd5b50565b600081359050611bfd81611bd7565b92915050565b60008060408385031215611c1a57611c19611bc3565b5b6000611c2885828601611bee565b9250506020611c3985828601611bee565b9150509250929050565b611c4c81611bcd565b82525050565b6000604082019050611c676000830185611c43565b611c746020830184611c43565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ca682611c7b565b9050919050565b611cb681611c9b565b8114611cc157600080fd5b50565b600081359050611cd381611cad565b92915050565b60008060008060808587031215611cf357611cf2611bc3565b5b6000611d0187828801611bee565b9450506020611d1287828801611cc4565b9350506040611d2387828801611bee565b9250506060611d3487828801611bee565b91505092959194509250565b6000602082019050611d556000830184611c43565b92915050565b600060208284031215611d7157611d70611bc3565b5b6000611d7f84828501611bee565b91505092915050565b6000819050919050565b6000611dad611da8611da384611c7b565b611d88565b611c7b565b9050919050565b6000611dbf82611d92565b9050919050565b6000611dd182611db4565b9050919050565b611de181611dc6565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e21578082015181840152602081019050611e06565b83811115611e30576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e5282611de7565b611e5c8185611df2565b9350611e6c818560208601611e03565b611e7581611e36565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611ec057611ebf611e80565b5b50565b6000819050611ed182611eaf565b919050565b6000611ee182611ec3565b9050919050565b611ef181611ed6565b82525050565b600060e082019050611f0c600083018a611dd8565b8181036020830152611f1e8189611e47565b9050611f2d6040830188611c43565b611f3a6060830187611c43565b611f476080830186611c43565b611f5460a0830185611c43565b611f6160c0830184611ee8565b98975050505050505050565b6000611f7882611c7b565b9050919050565b611f8881611f6d565b82525050565b6000602082019050611fa36000830184611f7f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611fce57611fcd611fa9565b5b8235905067ffffffffffffffff811115611feb57611fea611fae565b5b60208301915083600182028301111561200757612006611fb3565b5b9250929050565b60008060006040848603121561202757612026611bc3565b5b600061203586828701611bee565b935050602084013567ffffffffffffffff81111561205657612055611bc8565b5b61206286828701611fb8565b92509250509250925092565b6000806020838503121561208557612084611bc3565b5b600083013567ffffffffffffffff8111156120a3576120a2611bc8565b5b6120af85828601611fb8565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5468657265206973206e6f20737563682072756c696e6720746f2066756e642e600082015250565b60006121316020836120ea565b915061213c826120fb565b602082019050919050565b6000602082019050818103600083015261216081612124565b9050919050565b7f44697370757465206e6f742061707065616c61626c652e000000000000000000600082015250565b600061219d6017836120ea565b91506121a882612167565b602082019050919050565b600060208201905081810360008301526121cc81612190565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220d82611bcd565b915061221883611bcd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612251576122506121d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061229682611bcd565b91506122a183611bcd565b9250826122b1576122b061225c565b5b828204905092915050565b60006122c782611bcd565b91506122d283611bcd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612307576123066121d3565b5b828201905092915050565b600061231d82611bcd565b915061232883611bcd565b92508282101561233b5761233a6121d3565b5b828203905092915050565b7f446973707574652073686f756c64206265207265736f6c7665642e0000000000600082015250565b600061237c601b836120ea565b915061238782612346565b602082019050919050565b600060208201905081810360008301526123ab8161236f565b9050919050565b7f41707065616c20706572696f64206973206f7665722e00000000000000000000600082015250565b60006123e86016836120ea565b91506123f3826123b2565b602082019050919050565b60006020820190508181036000830152612417816123db565b9050919050565b7f41707065616c20706572696f64206973206f76657220666f72206c6f73657200600082015250565b6000612454601f836120ea565b915061245f8261241e565b602082019050919050565b6000602082019050818103600083015261248381612447565b9050919050565b7f41707065616c2066656520697320616c726561647920706169642e0000000000600082015250565b60006124c0601b836120ea565b91506124cb8261248a565b602082019050919050565b600060208201905081810360008301526124ef816124b3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061253d57607f821691505b6020821081036125505761254f6124f6565b5b50919050565b7f43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e600082015250565b600061258c6020836120ea565b915061259782612556565b602082019050919050565b600060208201905081810360008301526125bb8161257f565b9050919050565b7f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460008201527f696f6e20636f7374732e00000000000000000000000000000000000000000000602082015250565b600061261e602a836120ea565b9150612629826125c2565b604082019050919050565b6000602082019050818103600083015261264d81612611565b9050919050565b7f496e76616c69642072756c696e672e0000000000000000000000000000000000600082015250565b600061268a600f836120ea565b915061269582612654565b602082019050919050565b600060208201905081810360008301526126b98161267d565b9050919050565b7f5468652064697370757465206d757374206e6f7420626520736f6c7665642e00600082015250565b60006126f6601f836120ea565b9150612701826126c0565b602082019050919050565b60006020820190508181036000830152612725816126e9565b9050919050565b7f41707065616c20706572696f64206e6f7420706173736564207965742e000000600082015250565b6000612762601d836120ea565b915061276d8261272c565b602082019050919050565b6000602082019050818103600083015261279181612755565b905091905056fea2646970667358221220d3f65d41260fcd59f174afc9cf124d20c09c53dfca6a64823720480c75b3141964736f6c634300080d0033";

type CentralizedArbitratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CentralizedArbitratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CentralizedArbitrator__factory extends ContractFactory {
  constructor(...args: CentralizedArbitratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _arbitrationFee: PromiseOrValue<BigNumberish>,
    _appealDuration: PromiseOrValue<BigNumberish>,
    _appealFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CentralizedArbitrator> {
    return super.deploy(
      _arbitrationFee,
      _appealDuration,
      _appealFee,
      overrides || {}
    ) as Promise<CentralizedArbitrator>;
  }
  override getDeployTransaction(
    _arbitrationFee: PromiseOrValue<BigNumberish>,
    _appealDuration: PromiseOrValue<BigNumberish>,
    _appealFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _arbitrationFee,
      _appealDuration,
      _appealFee,
      overrides || {}
    );
  }
  override attach(address: string): CentralizedArbitrator {
    return super.attach(address) as CentralizedArbitrator;
  }
  override connect(signer: Signer): CentralizedArbitrator__factory {
    return super.connect(signer) as CentralizedArbitrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CentralizedArbitratorInterface {
    return new utils.Interface(_abi) as CentralizedArbitratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CentralizedArbitrator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CentralizedArbitrator;
  }
}
